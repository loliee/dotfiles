#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

# HOMEBREW options
export HOMEBREW_CASK_OPTS="--appdir=${HOME}/Applications --fontdir=/Library/Fonts --no-binaries"
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_INSECURE_REDIRECT=1
export PATH="${HOME}/.homebrew/bin:${PATH}"

if [[ ! -f ~/.homebrew/bin/brew ]]; then
  echo '--> Installing homebrew...'
  mkdir -p ~/.homebrew &&
    chmod 0700 ~/.homebrew &&
    curl -L https://github.com/Homebrew/brew/tarball/master |
    tar xz --strip 1 -C ~/.homebrew
fi

trap 'brew cleanup' INT TERM HUP EXIT

echo "--> Make sure we're using the latest Homebrew"
brew update

echo '--> Upgrade any already-installed formulae'
brew upgrade

echo '--> Tap extras Homebrew repositories'
brew tap hashicorp/tap

brew install \
  docker \
  firefox \
  gpg-suite \
  istat-menus \
  the-unarchiver

brew install \
  advancecomp \
  alacritty \
  ansifilter \
  argc \
  asciinema \
  asdf \
  ast-grep \
  awscli \
  bash \
  bash-completion@2 \
  bat \
  chruby-fish \
  closure-compiler \
  coreutils \
  curl \
  deno \
  diff-so-fancy \
  direnv \
  diskonaut \
  dive \
  dust \
  dprint \
  entr \
  exiftool \
  fasttext \
  fd \
  findutils \
  fish \
  fnm \
  font-iosevka-nerd-font \
  fzf \
  gawk \
  gifsicle \
  git \
  git-absorb \
  git-filter-repo \
  gnu-sed \
  gnu-tar \
  gnu-time \
  gnu-which \
  go \
  grep \
  gsl \
  hadolint \
  hashicorp/tap/packer \
  hashicorp/tap/terraform \
  hugo \
  ikuwow/ikuwow-sshrc/sshrc \
  ipcalc \
  jq \
  k9s \
  krew \
  kubectx \
  kubernetes-cli \
  kubernetes-helm \
  languagetool \
  luacheck \
  luarocks \
  minio-mc \
  mkcert \
  mozjpeg \
  moreutils \
  neovim \
  nmap \
  openssh \
  openssl \
  pgcli \
  pigz \
  pngquant \
  pv \
  pwgen \
  readline \
  reattach-to-user-namespace \
  rg \
  ruby-build \
  ruff \
  rustup \
  sass/sass/sass \
  shellcheck \
  shfmt \
  signal \
  skopeo \
  slack \
  ssh-copy-id \
  starship \
  stow \
  stylua \
  tcpdump \
  tcptraceroute \
  tflint \
  tfsec \
  tig \
  tmux \
  transmission \
  tree \
  uv \
  vale \
  vlc \
  watch \
  wget \
  wireguard-tools \
  xz \
  zlib \
  zoxide

brew install --appdir /Applications \
  1password \
  1password-cli

if ! littlesnitch -v &>/dev/null; then
  brew install --appdir /Applications \
    little-snitch \
    micro-snitch
fi

# Tooling based on Python
brew install \
  ansible-lint \
  bandit \
  codespell \
  pre-commit \
  yamllint

# Ruby
mkdir -p ~/.rubies
RUBIES=(
  3.4.5
)

for ruby in "${RUBIES[@]}"; do
  "${HOME}/.homebrew/bin/ruby-build" "$ruby" "${HOME}/.rubies/ruby-${ruby}"
done

rm -f ~/.ruby-version
echo "${RUBIES[@]: -1}" >~/.ruby-version

GEMS=(
  bundler
  mdl
  tmuxinator
)

# Lua
# Requires for my snippets
luarocks install --server=https://luarocks.org/dev lua-fmt
luarocks path --bin >~/.lua.env

# Enable this option for chruby.sh script
set +o nounset
# shellcheck source=/dev/null
source "$(brew --prefix)/share/chruby/chruby.sh"
chruby "$(cat ~/.ruby-version)"
set -o nounset

for gem in "${GEMS[@]}"; do
  gem list -i "${gem}" &>/dev/null || gem install "${gem}"
done

# Node
NODEJS=(
  23.7.0
)

eval "$(fnm env --multi)"
for node in "${NODEJS[@]}"; do
  fnm install "${node}"
done

fnm default "${NODEJS[-1]}"
fnm use "${NODEJS[-1]}"

NPM=(
  eslint@8
  prettier@3
)

for npm in "${NPM[@]}"; do
  npm install -g "$npm"
done

# Rust
if command -v rustup &>/dev/null; then
  rustup update
else
  rustup-init -y --no-modify-path
  # shellcheck source=/dev/null
  source "${HOME}/.cargo/env"
  rustup component add rustfmt
fi

# Configure languagetool
mkdir -p "${XDG_DATA_HOME}/fasttext"
curl https://dl.fbaipublicfiles.com/fasttext/supervised-models/lid.176.bin -o "${XDG_DATA_HOME}/fasttext/lid.176.bin"
cat <<EOT >"$(brew --prefix)/etc/languagetool/server.properties"
[content]
fasttextModel=${XDG_DATA_HOME}/fasttext/lid.176.bin
fasttextBinary=$(command -v fasttext)
EOT

brew services start languagetool
